version: '3'

services:

  ################
  # postgresdb #
  ################
  postgresdb:
    container_name: postgresdb
    image: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DB_ANON_ROLE=${DB_ANON_ROLE}
      - DB_SCHEMA=${DB_SCHEMA}
      - PGDATA=/data/postgres
    volumes:
      # anything in initdb directory is created in the database
      # see "How to extend this image" section at https://hub.docker.com/r/_/postgres/
      - "./initdb:/docker-entrypoint-initdb.d"
      - postgres:/data/postgres
    networks:
      - postgrest-backend
    restart: always

  #############
  # postgrest #
  #############
  postgrest:
    container_name: postgrest
    image: postgrest/postgrest:latest
    ports:
      - "3000:3000"
    environment:
      # The standard connection URI format, documented at
      # https://www.postgresql.org/docs/current/static/libpq-connect.html#LIBPQ-CONNSTRING
      - PGRST_DB_URI=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgresdb:5432/${POSTGRES_DB}
      # The name of which database schema to expose to REST clients
      - PGRST_DB_SCHEMA=${DB_SCHEMA}
      # The database role to use when no client authentication is provided
      - PGRST_DB_ANON_ROLE=${DB_ANON_ROLE}
    networks:
      - postgrest-backend
    restart: always

  #############
  # pgadmin #
  #############
  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
    volumes:
      - pgadmin:/root/.pgadmin
      - ./pgadmin_config:/cfg
      - ./pgadmin_config/servers.json:/pgadmin4/servers.json
    networks:
      - postgrest-backend

  prest:
    # use latest build
    image: prest/prest
    environment:
      - PREST_DEBUG=false
      - PREST_AUTH_ENABLED=true
      - PREST_PG_HOST=postgresdb
      - PREST_PG_USER=postgres
      - PREST_PG_PASS=postgres
      - PREST_PG_DATABASE=postgres
      - PREST_PG_PORT=5432
      - PREST_SSL_MODE=disable
      - PREST_CACHE_ENABLED=true
    ports:
      - "3001:3000"
    networks:
      - postgrest-backend



networks:
  postgrest-backend:
    driver: bridge

volumes:
    postgres:
    pgadmin:
